// Code generated by go-swagger; DO NOT EDIT.

package workload

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteWorkloadParams creates a new DeleteWorkloadParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteWorkloadParams() *DeleteWorkloadParams {
	return &DeleteWorkloadParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteWorkloadParamsWithTimeout creates a new DeleteWorkloadParams object
// with the ability to set a timeout on a request.
func NewDeleteWorkloadParamsWithTimeout(timeout time.Duration) *DeleteWorkloadParams {
	return &DeleteWorkloadParams{
		timeout: timeout,
	}
}

// NewDeleteWorkloadParamsWithContext creates a new DeleteWorkloadParams object
// with the ability to set a context for a request.
func NewDeleteWorkloadParamsWithContext(ctx context.Context) *DeleteWorkloadParams {
	return &DeleteWorkloadParams{
		Context: ctx,
	}
}

// NewDeleteWorkloadParamsWithHTTPClient creates a new DeleteWorkloadParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteWorkloadParamsWithHTTPClient(client *http.Client) *DeleteWorkloadParams {
	return &DeleteWorkloadParams{
		HTTPClient: client,
	}
}

/*
DeleteWorkloadParams contains all the parameters to send to the API endpoint

	for the delete workload operation.

	Typically these are written to a http.Request.
*/
type DeleteWorkloadParams struct {

	/* StackID.

	   The ID of the stack containing the workload to delete
	*/
	StackID string

	/* WorkloadID.

	   The ID of the workload to delete
	*/
	WorkloadID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete workload params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWorkloadParams) WithDefaults() *DeleteWorkloadParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete workload params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWorkloadParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete workload params
func (o *DeleteWorkloadParams) WithTimeout(timeout time.Duration) *DeleteWorkloadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete workload params
func (o *DeleteWorkloadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete workload params
func (o *DeleteWorkloadParams) WithContext(ctx context.Context) *DeleteWorkloadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete workload params
func (o *DeleteWorkloadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete workload params
func (o *DeleteWorkloadParams) WithHTTPClient(client *http.Client) *DeleteWorkloadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete workload params
func (o *DeleteWorkloadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStackID adds the stackID to the delete workload params
func (o *DeleteWorkloadParams) WithStackID(stackID string) *DeleteWorkloadParams {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the delete workload params
func (o *DeleteWorkloadParams) SetStackID(stackID string) {
	o.StackID = stackID
}

// WithWorkloadID adds the workloadID to the delete workload params
func (o *DeleteWorkloadParams) WithWorkloadID(workloadID string) *DeleteWorkloadParams {
	o.SetWorkloadID(workloadID)
	return o
}

// SetWorkloadID adds the workloadId to the delete workload params
func (o *DeleteWorkloadParams) SetWorkloadID(workloadID string) {
	o.WorkloadID = workloadID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteWorkloadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param stack_id
	if err := r.SetPathParam("stack_id", o.StackID); err != nil {
		return err
	}

	// path param workload_id
	if err := r.SetPathParam("workload_id", o.WorkloadID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
