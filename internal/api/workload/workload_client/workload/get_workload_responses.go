// Code generated by go-swagger; DO NOT EDIT.

package workload

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/stackpath/virtual-kubelet-stackpath/internal/api/workload/workload_models"
)

// GetWorkloadReader is a Reader for the GetWorkload structure.
type GetWorkloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkloadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkloadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetWorkloadDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetWorkloadOK creates a GetWorkloadOK with default headers values
func NewGetWorkloadOK() *GetWorkloadOK {
	return &GetWorkloadOK{}
}

/*
GetWorkloadOK describes a response with status code 200, with default header values.

GetWorkloadOK get workload o k
*/
type GetWorkloadOK struct {
	Payload *workload_models.V1GetWorkloadResponse
}

// IsSuccess returns true when this get workload o k response has a 2xx status code
func (o *GetWorkloadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workload o k response has a 3xx status code
func (o *GetWorkloadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workload o k response has a 4xx status code
func (o *GetWorkloadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workload o k response has a 5xx status code
func (o *GetWorkloadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workload o k response a status code equal to that given
func (o *GetWorkloadOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetWorkloadOK) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] getWorkloadOK  %+v", 200, o.Payload)
}

func (o *GetWorkloadOK) String() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] getWorkloadOK  %+v", 200, o.Payload)
}

func (o *GetWorkloadOK) GetPayload() *workload_models.V1GetWorkloadResponse {
	return o.Payload
}

func (o *GetWorkloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.V1GetWorkloadResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkloadUnauthorized creates a GetWorkloadUnauthorized with default headers values
func NewGetWorkloadUnauthorized() *GetWorkloadUnauthorized {
	return &GetWorkloadUnauthorized{}
}

/*
GetWorkloadUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type GetWorkloadUnauthorized struct {
	Payload *workload_models.StackpathapiStatus
}

// IsSuccess returns true when this get workload unauthorized response has a 2xx status code
func (o *GetWorkloadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workload unauthorized response has a 3xx status code
func (o *GetWorkloadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workload unauthorized response has a 4xx status code
func (o *GetWorkloadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workload unauthorized response has a 5xx status code
func (o *GetWorkloadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workload unauthorized response a status code equal to that given
func (o *GetWorkloadUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetWorkloadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] getWorkloadUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkloadUnauthorized) String() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] getWorkloadUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkloadUnauthorized) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *GetWorkloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkloadInternalServerError creates a GetWorkloadInternalServerError with default headers values
func NewGetWorkloadInternalServerError() *GetWorkloadInternalServerError {
	return &GetWorkloadInternalServerError{}
}

/*
GetWorkloadInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type GetWorkloadInternalServerError struct {
	Payload *workload_models.StackpathapiStatus
}

// IsSuccess returns true when this get workload internal server error response has a 2xx status code
func (o *GetWorkloadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workload internal server error response has a 3xx status code
func (o *GetWorkloadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workload internal server error response has a 4xx status code
func (o *GetWorkloadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workload internal server error response has a 5xx status code
func (o *GetWorkloadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get workload internal server error response a status code equal to that given
func (o *GetWorkloadInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetWorkloadInternalServerError) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] getWorkloadInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkloadInternalServerError) String() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] getWorkloadInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkloadInternalServerError) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *GetWorkloadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkloadDefault creates a GetWorkloadDefault with default headers values
func NewGetWorkloadDefault(code int) *GetWorkloadDefault {
	return &GetWorkloadDefault{
		_statusCode: code,
	}
}

/*
GetWorkloadDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type GetWorkloadDefault struct {
	_statusCode int

	Payload *workload_models.StackpathapiStatus
}

// Code gets the status code for the get workload default response
func (o *GetWorkloadDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get workload default response has a 2xx status code
func (o *GetWorkloadDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get workload default response has a 3xx status code
func (o *GetWorkloadDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get workload default response has a 4xx status code
func (o *GetWorkloadDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get workload default response has a 5xx status code
func (o *GetWorkloadDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get workload default response a status code equal to that given
func (o *GetWorkloadDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetWorkloadDefault) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] GetWorkload default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkloadDefault) String() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads/{workload_id}][%d] GetWorkload default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkloadDefault) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *GetWorkloadDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
