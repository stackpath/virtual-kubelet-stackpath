// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/stackpath/virtual-kubelet-stackpath/internal/api/workload/workload_models"
)

// UpdateImageReader is a Reader for the UpdateImage structure.
type UpdateImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateImageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateImageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateImageOK creates a UpdateImageOK with default headers values
func NewUpdateImageOK() *UpdateImageOK {
	return &UpdateImageOK{}
}

/*
UpdateImageOK describes a response with status code 200, with default header values.

UpdateImageOK update image o k
*/
type UpdateImageOK struct {
	Payload *workload_models.V1UpdateImageResponse
}

// IsSuccess returns true when this update image o k response has a 2xx status code
func (o *UpdateImageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update image o k response has a 3xx status code
func (o *UpdateImageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update image o k response has a 4xx status code
func (o *UpdateImageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update image o k response has a 5xx status code
func (o *UpdateImageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update image o k response a status code equal to that given
func (o *UpdateImageOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateImageOK) Error() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] updateImageOK  %+v", 200, o.Payload)
}

func (o *UpdateImageOK) String() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] updateImageOK  %+v", 200, o.Payload)
}

func (o *UpdateImageOK) GetPayload() *workload_models.V1UpdateImageResponse {
	return o.Payload
}

func (o *UpdateImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.V1UpdateImageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateImageUnauthorized creates a UpdateImageUnauthorized with default headers values
func NewUpdateImageUnauthorized() *UpdateImageUnauthorized {
	return &UpdateImageUnauthorized{}
}

/*
UpdateImageUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type UpdateImageUnauthorized struct {
	Payload *workload_models.StackpathapiStatus
}

// IsSuccess returns true when this update image unauthorized response has a 2xx status code
func (o *UpdateImageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update image unauthorized response has a 3xx status code
func (o *UpdateImageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update image unauthorized response has a 4xx status code
func (o *UpdateImageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update image unauthorized response has a 5xx status code
func (o *UpdateImageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update image unauthorized response a status code equal to that given
func (o *UpdateImageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateImageUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] updateImageUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateImageUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] updateImageUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateImageUnauthorized) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *UpdateImageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateImageInternalServerError creates a UpdateImageInternalServerError with default headers values
func NewUpdateImageInternalServerError() *UpdateImageInternalServerError {
	return &UpdateImageInternalServerError{}
}

/*
UpdateImageInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type UpdateImageInternalServerError struct {
	Payload *workload_models.StackpathapiStatus
}

// IsSuccess returns true when this update image internal server error response has a 2xx status code
func (o *UpdateImageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update image internal server error response has a 3xx status code
func (o *UpdateImageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update image internal server error response has a 4xx status code
func (o *UpdateImageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update image internal server error response has a 5xx status code
func (o *UpdateImageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update image internal server error response a status code equal to that given
func (o *UpdateImageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateImageInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] updateImageInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateImageInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] updateImageInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateImageInternalServerError) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *UpdateImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateImageDefault creates a UpdateImageDefault with default headers values
func NewUpdateImageDefault(code int) *UpdateImageDefault {
	return &UpdateImageDefault{
		_statusCode: code,
	}
}

/*
UpdateImageDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type UpdateImageDefault struct {
	_statusCode int

	Payload *workload_models.StackpathapiStatus
}

// Code gets the status code for the update image default response
func (o *UpdateImageDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this update image default response has a 2xx status code
func (o *UpdateImageDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update image default response has a 3xx status code
func (o *UpdateImageDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update image default response has a 4xx status code
func (o *UpdateImageDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update image default response has a 5xx status code
func (o *UpdateImageDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update image default response a status code equal to that given
func (o *UpdateImageDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *UpdateImageDefault) Error() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] UpdateImage default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateImageDefault) String() string {
	return fmt.Sprintf("[PATCH /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] UpdateImage default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateImageDefault) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *UpdateImageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
