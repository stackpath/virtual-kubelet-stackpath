// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/stackpath/virtual-kubelet-stackpath/internal/api/workload/workload_models"
)

// CreateImageReader is a Reader for the CreateImage structure.
type CreateImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateImageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateImageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateImageOK creates a CreateImageOK with default headers values
func NewCreateImageOK() *CreateImageOK {
	return &CreateImageOK{}
}

/*
CreateImageOK describes a response with status code 200, with default header values.

CreateImageOK create image o k
*/
type CreateImageOK struct {
	Payload *workload_models.V1CreateImageResponse
}

// IsSuccess returns true when this create image o k response has a 2xx status code
func (o *CreateImageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create image o k response has a 3xx status code
func (o *CreateImageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create image o k response has a 4xx status code
func (o *CreateImageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create image o k response has a 5xx status code
func (o *CreateImageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create image o k response a status code equal to that given
func (o *CreateImageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create image o k response
func (o *CreateImageOK) Code() int {
	return 200
}

func (o *CreateImageOK) Error() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] createImageOK  %+v", 200, o.Payload)
}

func (o *CreateImageOK) String() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] createImageOK  %+v", 200, o.Payload)
}

func (o *CreateImageOK) GetPayload() *workload_models.V1CreateImageResponse {
	return o.Payload
}

func (o *CreateImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.V1CreateImageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateImageUnauthorized creates a CreateImageUnauthorized with default headers values
func NewCreateImageUnauthorized() *CreateImageUnauthorized {
	return &CreateImageUnauthorized{}
}

/*
CreateImageUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type CreateImageUnauthorized struct {
	Payload *workload_models.StackpathapiStatus
}

// IsSuccess returns true when this create image unauthorized response has a 2xx status code
func (o *CreateImageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create image unauthorized response has a 3xx status code
func (o *CreateImageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create image unauthorized response has a 4xx status code
func (o *CreateImageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create image unauthorized response has a 5xx status code
func (o *CreateImageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create image unauthorized response a status code equal to that given
func (o *CreateImageUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create image unauthorized response
func (o *CreateImageUnauthorized) Code() int {
	return 401
}

func (o *CreateImageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] createImageUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateImageUnauthorized) String() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] createImageUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateImageUnauthorized) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *CreateImageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateImageInternalServerError creates a CreateImageInternalServerError with default headers values
func NewCreateImageInternalServerError() *CreateImageInternalServerError {
	return &CreateImageInternalServerError{}
}

/*
CreateImageInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type CreateImageInternalServerError struct {
	Payload *workload_models.StackpathapiStatus
}

// IsSuccess returns true when this create image internal server error response has a 2xx status code
func (o *CreateImageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create image internal server error response has a 3xx status code
func (o *CreateImageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create image internal server error response has a 4xx status code
func (o *CreateImageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create image internal server error response has a 5xx status code
func (o *CreateImageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create image internal server error response a status code equal to that given
func (o *CreateImageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create image internal server error response
func (o *CreateImageInternalServerError) Code() int {
	return 500
}

func (o *CreateImageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] createImageInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateImageInternalServerError) String() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] createImageInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateImageInternalServerError) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *CreateImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateImageDefault creates a CreateImageDefault with default headers values
func NewCreateImageDefault(code int) *CreateImageDefault {
	return &CreateImageDefault{
		_statusCode: code,
	}
}

/*
CreateImageDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type CreateImageDefault struct {
	_statusCode int

	Payload *workload_models.StackpathapiStatus
}

// IsSuccess returns true when this create image default response has a 2xx status code
func (o *CreateImageDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create image default response has a 3xx status code
func (o *CreateImageDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create image default response has a 4xx status code
func (o *CreateImageDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create image default response has a 5xx status code
func (o *CreateImageDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create image default response a status code equal to that given
func (o *CreateImageDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create image default response
func (o *CreateImageDefault) Code() int {
	return o._statusCode
}

func (o *CreateImageDefault) Error() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] CreateImage default  %+v", o._statusCode, o.Payload)
}

func (o *CreateImageDefault) String() string {
	return fmt.Sprintf("[POST /workload/v1/stacks/{image.stack_id}/images/{image.family}/{image.tag}][%d] CreateImage default  %+v", o._statusCode, o.Payload)
}

func (o *CreateImageDefault) GetPayload() *workload_models.StackpathapiStatus {
	return o.Payload
}

func (o *CreateImageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(workload_models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
