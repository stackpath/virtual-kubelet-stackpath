// Code generated by go-swagger; DO NOT EDIT.

package workload_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1InstanceFieldRef The reference to a field on an instance
//
// swagger:model v1InstanceFieldRef
type V1InstanceFieldRef struct {

	// The json path to an instance field
	//
	// This is a json path expression to an instance field. For example: `.name`, `.location.cityCode`, `.ipAddress`, `.containers[0].image`, `.networkInterfaces[?(@.network=="default")].gateway`.  Dots inside of map keys need to be escaped: `.metadata.labels['workload\.platform\.stackpath\.net/workload-slug']`. Recursive descent, union operators, and range/end are not allowed.
	FieldPath string `json:"fieldPath,omitempty"`

	// If the field value is not required to start an instance
	//
	// If a field is optional there is no guarantee that the value will be provided to the environment before the container starts.
	Optional bool `json:"optional,omitempty"`
}

// Validate validates this v1 instance field ref
func (m *V1InstanceFieldRef) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 instance field ref based on context it is used
func (m *V1InstanceFieldRef) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1InstanceFieldRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1InstanceFieldRef) UnmarshalBinary(b []byte) error {
	var res V1InstanceFieldRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
